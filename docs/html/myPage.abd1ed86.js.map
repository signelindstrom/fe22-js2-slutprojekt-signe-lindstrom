{"mappings":"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","sources":["src/modules/multiUseFunctions.ts","src/modules/myPage.ts"],"sourcesContent":["const currentUser = localStorage.getItem('user');\r\nconst currentAvatar = localStorage.getItem('avatar');\r\n\r\nexport const baseUrl: string = 'https://js2-7158b-default-rtdb.europe-west1.firebasedatabase.app/'\r\n\r\n// structure of database user-object\r\nexport type firebaseUser = {\r\n    username: string,\r\n    avatar: string,\r\n    password: string,\r\n    posts: postObject\r\n}\r\n\r\n// structure of database user posts-object\r\nexport type postObject = {\r\n    message: string,\r\n    time: number\r\n}\r\n\r\n// get firebase data\r\nexport async function getFirebaseData(url: string) {\r\n    const fetchUrl = baseUrl + url;\r\n\r\n    const response = await fetch(fetchUrl);\r\n    const data = await response.json();\r\n\r\n    return data\r\n}\r\n\r\n// create user profile\r\nexport function createProfile(user, avatar, avatarElement: HTMLImageElement, usernameElement: HTMLElement) {\r\n\r\n    avatarElement.src = avatar;\r\n    usernameElement.innerText = user;\r\n}\r\n\r\n\r\n// shows list of users + lets user view their profile\r\nexport async function getUserList(userListDiv: HTMLDivElement) {\r\n\r\n    const data = await getFirebaseData('users.json');\r\n    const userArray = Object.values(data);\r\n\r\n    listOfUsers(userArray)\r\n    function listOfUsers(array) {\r\n        array.forEach((list: firebaseUser) => {\r\n            const { username, avatar } = list;\r\n            if (username != undefined && avatar != undefined && username != currentUser) {\r\n                const userInfo = document.createElement('div');\r\n                userListDiv.append(userInfo);\r\n\r\n                const userName = document.createElement('div');\r\n                const userImg = document.createElement('img');\r\n                userName.innerText = username;\r\n                userImg.src = avatar;\r\n                userInfo.append(userName, userImg);\r\n\r\n                userInfo.addEventListener('click', () => {\r\n                    localStorage.setItem('viewUser', username);\r\n                    localStorage.setItem('viewUserAvatar', avatar);\r\n                    setTimeout(() => {\r\n                        location.assign('../html/usersPage.html');\r\n                    }, 100);\r\n                })\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// lets user log out, redirects user to login-page\r\nexport function logOut(btn: HTMLButtonElement) {\r\n    btn.addEventListener('click', () => {\r\n        location.assign('../index.html')\r\n    })\r\n}","import { firebaseUser, getFirebaseData, postObject, getUserList, logOut, createProfile, baseUrl } from \"./multiUseFunctions\";\r\n\r\nconst currentUser = localStorage.getItem('user');\r\nconst currentAvatar = localStorage.getItem('avatar');\r\nconst displayAvatar = document.querySelector('#user-avatar') as HTMLImageElement;\r\nconst displayName = document.querySelector('#user-name') as HTMLElement;\r\n\r\nconst postsDiv = document.querySelector('#all-posts') as HTMLDivElement;\r\n\r\n// redirects user to homepage\r\nconst homepageBtn = document.querySelector('#homepage-btn') as HTMLButtonElement;\r\nhomepageBtn.addEventListener('click', () => {\r\n    location.assign('../html/homePage.html');\r\n})\r\n\r\n\r\ncreateProfile(currentUser, currentAvatar, displayAvatar, displayName);\r\n\r\ngetId();\r\nsetTimeout(() => {\r\n    getPost();\r\n}, 200);\r\n\r\n// get id of user to show user posts\r\nasync function getId() {\r\n    const data = await getFirebaseData(`users.json`);\r\n\r\n    const userArray = Object.values(data);\r\n    const keyArray = Object.keys(data);\r\n\r\n    idFromDatabase(userArray)\r\n    function idFromDatabase(array) {\r\n        let i:number = 0;\r\n        array.forEach((info: firebaseUser) => {\r\n            const { username } = info;\r\n            if (currentUser == username) {\r\n                const userId = keyArray[i];\r\n                console.log(keyArray[i])\r\n                localStorage.setItem('userId', userId);\r\n                // console.log(userId)\r\n            }\r\n            i++;\r\n        })\r\n    }\r\n}\r\n\r\n\r\nconst makePost = document.querySelector('#make-post') as HTMLInputElement;\r\nconst postBtn = document.querySelector('#post-btn') as HTMLButtonElement;\r\n\r\n// click post-btn to post\r\npostBtn.addEventListener('click', async () => {\r\n    const data = await getFirebaseData(`users.json`);\r\n    const userArray = Object.values(data);\r\n\r\n    addPost(userArray);\r\n});\r\n\r\n// adds post to database\r\nasync function addPost(array) {\r\n    array.forEach((data: firebaseUser) => {\r\n        const { username } = data;\r\n        if (currentUser == username) {\r\n            console.log('hej');\r\n\r\n            let timestamp = new Date();\r\n\r\n            const postMessage = {\r\n                message: makePost.value,\r\n                time: timestamp.getTime()\r\n            }\r\n\r\n            postToFirebase(postMessage);\r\n            async function postToFirebase(obj: object) {\r\n                const url = baseUrl + `users/${localStorage.getItem('userId')}/posts.json`\r\n\r\n                const init = {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(obj),\r\n                    headers: {\r\n                        'Content-type': \"application/json; charset=UTF-8\"\r\n                    }\r\n                }\r\n\r\n                const response = await fetch(url, init);\r\n                const data = await response.json();\r\n            }\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            getPost();\r\n            makePost.value = '';\r\n        }, 400);\r\n\r\n    })\r\n};\r\n\r\n\r\n// gets all posts from database\r\nasync function getPost() {\r\n    const data = await getFirebaseData(`users/${localStorage.getItem('userId')}/posts.json`);\r\n    const userArray = Object.values(data);\r\n\r\n    showAllPosts(userArray);\r\n}\r\n\r\n// displays posts from database\r\nfunction showAllPosts(postArray) {\r\n    postsDiv.innerHTML = '';\r\n    postArray.forEach((data: postObject) => {\r\n        const { message } = data;\r\n        const displayPost = document.createElement('div');\r\n        postsDiv.prepend(displayPost);\r\n        displayPost.innerText = message;\r\n    });\r\n}\r\n\r\n\r\n// gets list of users from database and displays them in div\r\nconst userListDiv = document.querySelector('#user-list') as HTMLDivElement;\r\ngetUserList(userListDiv);\r\n\r\n\r\n// lets user delete their account from database and redirects user to login-page\r\nconst deleteBtn = document.querySelector('#delete-btn') as HTMLButtonElement;\r\ndeleteBtn.addEventListener('click', async () => {\r\n    \r\n    const data = await getFirebaseData('users.json');\r\n    const userArray = Object.values(data);\r\n\r\n    deleteUser(userArray);\r\n    async function deleteUser(array) {\r\n\r\n        array.forEach((user: firebaseUser) => {\r\n            const { username } = user;\r\n            if (currentUser === username) {\r\n                deleteData();\r\n                async function deleteData() {\r\n                    const deleteUrl = baseUrl + `users/${localStorage.getItem('userId')}.json`\r\n\r\n                    const response = await fetch(deleteUrl, { method: 'DELETE' });\r\n                    const data = await response.json();\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    setTimeout(() => {\r\n        location.assign('../index.html');\r\n    }, 400);\r\n})\r\n\r\n\r\n// logOut-btn redirects user to login-page\r\nconst logOutBtn = document.querySelector('#log-out-btn') as HTMLButtonElement;\r\nlogOut(logOutBtn);"],"names":["$690f99fc8af240e0$var$currentUser","localStorage","getItem","$690f99fc8af240e0$export$a135e81e9a047f61","async","$690f99fc8af240e0$export$35d7b35fee7b6919","url","fetchUrl","response","fetch","json","$33a882480239d0c2$var$currentUser","$33a882480239d0c2$var$currentAvatar","$33a882480239d0c2$var$displayAvatar","document","querySelector","$33a882480239d0c2$var$displayName","$33a882480239d0c2$var$postsDiv","user","avatar","usernameElement","addEventListener","location","assign","src","innerText","data","userArray","Object","values","keyArray","keys","array","i","forEach","info","username","userId","console","log","setItem","idFromDatabase","$33a882480239d0c2$var$getId","setTimeout","$33a882480239d0c2$var$getPost","$33a882480239d0c2$var$makePost","postArray","innerHTML","message","displayPost","createElement","prepend","value","timestamp","Date","postToFirebase","obj","init","method","body","JSON","stringify","headers","time","getTime","$33a882480239d0c2$var$addPost","userListDiv","list","undefined","userInfo","append","userName","userImg","deleteUrl","deleteData","deleteUser","$33a882480239d0c2$var$logOutBtn"],"version":3,"file":"myPage.abd1ed86.js.map"}